version: '3.7'

services:
  api:
    build: .
    ports:
      - "80:80"
    environment:
      - REDIS_HOST=redis-api
      - MYSQL_HOST=mysql-api
      - RABBITMQ_HOST=rabbitmq-api
      - RABBITMQ_PORT=5672
    depends_on:
      redis-api:
        condition: service_healthy
      rabbitmq-api:
        condition: service_healthy
      mysql-api:
        condition: service_healthy
    networks:
      - api_net
    volumes:
      - .:/app
  mysql-api:
    image: mysql:8.0
    container_name: mysql-api
    environment:
      - MYSQL_DATABASE=puraodb
      - MYSQL_ROOT_PASSWORD=root
      - TZ=America/Brasilia
    ports:
      - "3306:3306"
    volumes:
      - mysql-volume:/var/lib/mysql
    networks:
      - api_net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
  redis-api:
    image: redis
    container_name: redis-api
    command: ["redis-server"]
    ports:
      - "6379:6379"
    networks:
      - api_net
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
  rabbitmq-api:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq-api
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - api_net
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq/
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  mysql-volume:
    driver: local
    name: mysql-volume
  redis_data:
    driver: local
    name: redis_data


networks:
  api_net:
    driver: bridge